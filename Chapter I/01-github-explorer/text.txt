-> inicializaar o repositorio com o package.json 
-> arquivo com as informações principais como nome, licensa, version e biblioteecas
yarn init -y

-> Instalar react
yarn add react

-> instalar react dom
-> a forma de trabalhar com o react na web, árvore de 
-> pesquisar oq é?
-> como funciona?
-> é separado da biblioteca react pq o react pode ser utilizdo para mobile (react native), se fosse utilizar mobile iríamos utilizar react-native não react-dom
yarn add react-dom

pasta SRC é a pasta onde irá ficar todo nosso código
pasta public é onde fica todos nossos arquivos públicos, principalmente index.html, icones da página etc
-----------------------------------------------------------------------------------------------------------------------------------
BABEL
-> tem a função de converter nosso código para que todos os browsers consiga entender o código
-> https://babeljs.io/
yarn add @babel/core @babel/cli @babel/preset-env -D

babel core
-> babel em geeral, todas suas funcionalidades etc

babel cli
-> é pra conseguir executar o babel atravz da linha de comando

babel-preset-env
-> biblioteca do babel que indentifica em qual local está a aplicação e converte da melhor maneira
-> exemplo se tivessemos rodando um ambiente node seria pouca coisa que o babel teria que converter, agora quando utilizamos os browsers é necessário convertar mais código
-----------------------------------------------------------------------------------------------------------------------------------
web-pack
-> vai converter todos os arquivos e transformar em arquivos que são legíveis pelo browsers
-> qual a diferença entre web-pack e babel?

rodar webpack -> yarn webpack
rodar babel -> yarn babel src/index.jsx --out-file dist/bundle.js

web-pack-dev-server => automatiza a criação do bundle toda vez que salva o arquivo
rodar webpack-server -> yarn webpack server
e roda n url http://localhost:8080/
-----------------------------------------------------------------------------------------------------------------------------------
-> source-maps
-> uma forma de visualizar um forma original da aplicação mesmo quando o código está deentro do bundle.js
-> por exemplo quando dar qualquer tipo de erro no nosso código, e quando vamos visualizar o erro lá nop browser, ele indica o erro do arquuivo transpilado bundle.js 
para facilitar isso, utilizamos o source-maps
-----------------------------------------------------------------------------------------------------------------------------------
cross-env é para facilitar na hora da criação do env pelo windowns
-----------------------------------------------------------------------------------------------------------------------------------
style-loader ee css-loader permite que import arquivo css dentro do js

https://sass-lang.com/
SASS -> pré processador de css
-> sass-loader permite que o código entenda o que sãao os arquuivos sass
-> node-sass é a biblioteca em si
-> sass permite criar todo um encadiamento 
-----------------------------------------------------------------------------------------------------------------------------------
componentes
-> componentes é uma de encapsular uma quantidade de codígo dentro de uum elemento que tem seu proprio estilo e funcionalidades

propriedade
-> funciona como atributos deentro do html, informações que pode passar para o componente funciona da maneira que quiser

estado
-> é uma variavel em que o react monitora, possibilitando gravar e mostrar informações

-----------------------------------------------------------------------------------------------------------------------------------
mutabilidade -> mutabilida é quando alteramos o valor de uma variavel na memoria, exemplo:
usuarios = ['yago', 'leticia', 'maria']
usuarios.push('andrea')

ao inserir o usuário andrea alteramos o valor da variável inicializar

imutabilidade
-> permite que uma variavel nunca seja alterada mas sempre receber um novo valor, exemplo

quando queremos adicionar um novo usuário em um estado do react que é (imutabilidade), sempre temos que criar um novo array adiconando todos os outros usuarios:

novosUsuário = [...usuarios, 'andrea']
-----------------------------------------------------------------------------------------------------------------------------------

fast refrash react
-> uma biblioteca que permite vc rodar seu projeto após salvar, sem peder suas informações intruzidas (mantendo o valor do estado)

https://github.com/tavareshenrique/ignite-reactjs/blob/main/01-github-explorer/package.json

-----------------------------------------------------------------------------------------------------------------------------------

ROOKS DO REACT - UseState e UseEffect

useEffect tem dois parametros: o primeiro  uma função e o segundo a dependencia caso mudem o useeffect roda dnv.  
  - Caso passe um array vazio nas dependecia vai rodar apenas uma vez no inicio do código
  - Caso deixa o paremetro de dependecia com array vazio, entra em uum loop infinito

o react por padrão sempre executa a função novamente quando o valor de algum estado ou propriedade é alterado

-----------------------------------------------------------------------------------------------------------------------------------
Typescript é um super set (um conjunto de funcionalidade a mais do javascript)
-> typescript é fortemente tipado, e com isso faz que as tipagem não sejam dinamicas facilitando na hora de codar

-> para definir a tipagem de uma determinada informação se usa TYPE ou INTERFACE (type é mais semantico)  -> pesquisar diferença entre type e interface
-> o typescript ele vai rodar somente em desenvolvimento, em produção da maioria das vezes é transformado em javascript

isntalar typescript
yarn add typescript

yarn tsc --init -> inicializa o typescript naa aplicação e cria o tsConfig.json

entendo configurações mais inportantes do tsConfig
lib -> adiciona algumas funcionalidade, entende que vamos utilizar a dom, html e isso oferece algumas tipagem da dom
allowjs -> permite ter aquivos ts e js
jsx -> fala que tamos utilizando o jsx, apenas informa que vamos utilizar o html dentro do typescript
noEmit -> caso executamos o build da aplicação não emita o código ts
strict -> para entrar no modo strict do javascript (pesquisar um pouco sobre isso)
resolveJsonModule -> possibilita importar arquivos json
include -> indica pro ts que nosso código TS está dentro do src

configuração do typescript dentro do babel e webpack
yarn add @bebel/preset-typescript -D

qual diferença entre MAP e FOREACH
